<div style="padding: 20px 0 20px 0;">
	Home→<%= link_to 'Home', root_path %>
	<%= link_to 'Progate/HTML&CSS初級編', htmlcss_first_path %>
	first→<%= link_to 'Progate/Rubyコース1', ruby_path %>
	prev→<%= link_to 'Progate/Rubyコース2', ruby_part2_path %>
</div>

<h1>Ruby　コース3</h1>


<div style="padding: 100px 0 100px 0;">
	メソッドを学ぼう
	このレッスンでは、プログラミングにおいて必須の知識である「メソッド」について学んでいきます。
	新しく覚えることも多いですが、焦らず少しずつ理解していきましょう！
</div>

<div style="padding: 100px 0 100px 0;">
	メソッドとは、複数の処理を1つにまとめたものです。
	図では、「あいさつをする」「名前を言う」という2つの処理を「introduceメソッド」としてまとめています。
	実際のメソッドの書き方について、次のスライドから学んでいきましょう。
	<br><%= image_tag '/assets/メソッドとは1.png' %><%= image_tag '/assets/メソッドとは2.png' %><br>
	まずは、メソッドをどのようにつくるか見ていきましょう。
	左の図のように、「def メソッド名」と「end」の間に、まとめたい処理を書くことでメソッドをつくることができます。このことを「メソッドを定義する」と言います。
	右の図では、2つの出力を行う、introduceメソッドを定義しています。
	<br><%= image_tag '/assets/メソッドとは-メソッドの定義1.png' %><%= image_tag '/assets/メソッドとは-メソッドの定義2.png' %><br>
	メソッドは、定義するだけでは実行されません。
	図のように、「メソッド名」とすることで実行できます。メソッドを実行することを、「メソッドを呼び出す」と言います。
	<br><%= image_tag '/assets/メソッドとは-メソッドとは-メソッドの呼び出し1.png' %><%= image_tag '/assets/メソッドとは-メソッドとは-メソッドの呼び出し2.png' %><br>
	[index.rb]
	def introduce
	  puts "こんにちは"
	  puts "私はにんじゃわんこです"
	  # ②今の状態でコードを実行すると、2つの出力が確認できるはずです。今度はメソッドの処理を追加してみましょう。
	  # ③出力を追加してください　introduceメソッドに、14歳ですと出力する処理を追加してください。
	  puts "14歳です"
	end
	puts "-----自己紹介-----"
	# ①introduceメソッドを呼び出してください
	introduce
</div>

<div style="padding: 100px 0 100px 0;">
	それでは今回は、メソッドを自分で1から作ってみましょう。
	大事なのは「def メソッド名」と「end」です。
	Ruby 学習コースⅠで学んだ「インデント」を使って、見やすいコードを書きましょう。
	<br><%= image_tag '/assets/メソッドを自作しよう.png' %><br>
	[index.rb]
	# ①以下の2つの文を出力する　print_infoメソッドを定義してください。1つ目の文：わんこでんきへようこそ！　2つ目の文：今日はヘッドホンがセール中です！
	# ②print_infoメソッドを定義してください
	def print_info
	  puts "わんこでんきへようこそ！"
	  puts "今日はヘッドホンがセール中です！"
	end
	# ③print_infoメソッドを呼び出してください
	print_info
</div>

<div style="padding: 100px 0 100px 0;">
	引数（ひきすう）とはメソッドに与える追加情報のようなものです。メソッドを呼び出すときに一緒に引数を渡すことで、メソッドの中でその値を利用することができます。
	<br><%= image_tag '/assets/引数とは-引数とは.gif' %><br>
	それでは、引数を渡せるメソッドを定義してみましょう。
	図のように、「def メソッド名(引数名)」とすることで、引数を指定することができます。
	<br><%= image_tag '/assets/引数を受け取るメソッドの定義1.png' %><%= image_tag '/assets/引数を受け取るメソッドの定義2.png' %><br>
	引数を渡してメソッドを呼び出すには、「メソッド名(値)」とします。
	メソッドは、指定した値を受け取り、その値は引数に代入されます。
	右の図では、introduceメソッドの呼び出し時に「"にんじゃわんこ"」という値が渡され、引数nameに代入されています。
	<br><%= image_tag '/assets/引数を受け取るメソッドの呼び出し1.png' %><%= image_tag '/assets/引数を受け取るメソッドの呼び出し2.png' %><br>
	引数はメソッド内では変数のように使用することができます。
	以下の図で、引数を受け取るメソッドの流れを確認しましょう。
	<br><%= image_tag '/assets/メソッド内で引数を使用する1.png' %><%= image_tag '/assets/メソッド内で引数を使用する2.png' %><br>
	[index.rb]
	def introduce(name)
	  puts "こんにちは"
	  puts "私は#{name}です"
	end
	# ①引数を渡してメソッドを呼び出してください
	introduce("にんじゃ")
</div>

<div style="padding: 100px 0 100px 0;">
	メソッドを用いる場合と、用いない場合のコードを見比べてみましょう。
	左の図のようにメソッドを用いない場合には何度も同じような処理を書く必要がありますが、右の図のように共通の処理をメソッドにまとめることによって、シンプルに書くことができます。
	<br><%= image_tag '/assets/メソッドの利点1.png' %><%= image_tag '/assets/メソッドの利点2.png' %><br>
	引数について詳しく見ていきましょう。
	前のページでは、メソッドの引数として文字列を渡していましたが、文字列だけでなく数値などの値も引数として渡すことができます。
	<br><%= image_tag '/assets/様々な引数1.png' %><%= image_tag '/assets/様々な引数2.png' %><br>
	引数のあるメソッドは、引数を渡さずに呼び出すことができません。
	引数を渡さないで呼び出そうとすると、エラーになってしまいますので注意しましょう。
	<br><%= image_tag '/assets/呼び出し時の注意1.png' %><%= image_tag '/assets/呼び出し時の注意2.png' %><br>
	[index.rb]
	# ①print_infoメソッドを定義してください ただし、引数名はitemとしてください。
	# ②print_infoメソッドで、以下の2つの文を出力するようにしてください。　1つ目：わんこでんきへようこそ！　2つ目：今日は○○がセール中です！　ただし、「○○」の部分には、引数itemの値を入れてください。
	def print_info(item)
	  puts "わんこでんきへようこそ！"
	  puts "今日は#{item}がセール中です！"
	end
	# ③引数を「ヘッドホン」としてメソッドを呼び出してください
	print_info("ヘッドホン")
	# ④引数を「テレビ」としてメソッドを呼び出してください
	print_info("テレビ")
</div>

<div style="padding: 100px 0 100px 0;">
	brew install git-secrets1231223234
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>

<div style="padding: 100px 0 100px 0;">
</div>




<div style="padding: 100px 0 100px 0;">
next→<%= link_to 'Ruby_part4', ruby_part4_path %><br>
Home→<%= link_to 'Home', root_path %>
</div>